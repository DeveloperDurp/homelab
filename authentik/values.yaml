authentik:
  global:
    env: 
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-pass
            key: dbpass
      - name: AUTHENTIK_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: db-pass
            key: secretkey
    revisionHistoryLimit: 1
    image:
      repository: registry.internal.durp.info/goauthentik/server
      pullPolicy: Always
  authentik:
    outposts:
      container_image_base: registry.internal.durp.info/goauthentik/%(type)s:%(version)s
  server:
    name: server
    replicas: 3
  worker:
    name: worker
    replicas: 3
  postgresql:
    enabled: true
    image:
      registry: registry.internal.durp.info
      repository: bitnami/postgresql
      pullPolicy: Always
    postgresqlUsername: "authentik"
    postgresqlDatabase: "authentik"
    existingSecret: db-pass 
    persistence:
      enabled: true
      storageClass: longhorn
      accessModes:
        - ReadWriteMany
  redis:
    enabled: true
    image:
      registry: registry.internal.durp.info
      repository: bitnami/redis
      pullPolicy: Always
    architecture: standalone
    auth:
      enabled: false
