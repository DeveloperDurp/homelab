authentik:
  # -- Provide a name in place of `authentik`. Prefer using global.nameOverride if possible
  nameOverride: ""
  # -- String to fully override `"authentik.fullname"`. Prefer using global.fullnameOverride if possible
  fullnameOverride: ""
  # -- Override the Kubernetes version, which is used to evaluate certain manifests
  kubeVersionOverride: ""

  ## Globally shared configuration for authentik components.
  global:
    # -- Provide a name in place of `authentik`
    nameOverride: ""
    # -- String to fully override `"authentik.fullname"`
    fullnameOverride: ""
    # -- A custom namespace to override the default namespace for the deployed resources.
    namespaceOverride: ""
    # -- Common labels for all resources.
    additionalLabels: {}
      # app: authentik

  # -- Annotations to apply to all resources
  annotations: {}

  serviceAccountSecret:
    # -- Create a secret with the service account credentials
    enabled: true

  clusterRole:
    # -- Create a clusterole in addition to a namespaced role.
    enabled: true#

    
  #  global:
  #    env: 
  #      - name: AUTHENTIK_POSTGRESQL__PASSWORD
  #        valueFrom:
  #          secretKeyRef:
  #            name: db-pass
  #            key: dbpass
  #      - name: AUTHENTIK_SECRET_KEY
  #        valueFrom:
  #          secretKeyRef:
  #            name: db-pass
  #            key: secretkey
  #    revisionHistoryLimit: 1
  #    image:
  #      repository: registry.internal.durp.info/goauthentik/server
  #      pullPolicy: Always
  #  authentik:
  #    outposts:
  #      container_image_base: registry.internal.durp.info/goauthentik/%(type)s:%(version)s
  #    postgresql:
  #      host: '{{ .Release.Name }}-postgresql-hl'
  #      name: "authentik"
  #      user: "authentik"
  #      port: 5432
  #  server:
  #    name: server
  #    replicas: 3
  #  worker:
  #    replicas: 3
  #  postgresql:
  #    enabled: true
  #    image:
  #      registry: registry.internal.durp.info
  #      repository: bitnami/postgresql
  #      pullPolicy: Always
  #    postgresqlUsername: "authentik"
  #    postgresqlDatabase: "authentik"
  #    existingSecret: db-pass 
  #    persistence:
  #      enabled: true
  #      storageClass: longhorn
  #      accessModes:
  #        - ReadWriteMany
  #  redis:
  #    enabled: true
  #    master:
  #      persistence:
  #        enabled: false    
  #    image:
  #      registry: registry.internal.durp.info
  #      repository: bitnami/redis
  #      pullPolicy: Always
  #    architecture: standalone
  #    auth:
  #      enabled: false
